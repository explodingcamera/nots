on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build and add binaries to (e.g. nots-cli-v0.1.0). Has to be a tag from a release."
        required: true
        type: string

name: Build and release binaries/containers

permissions:
  contents: write

env:
  RELEASE_TAG_REF: ${{ github.event.inputs.tag || github.ref_name }}

jobs:
  build-notsd-docker:
    name: Release ${{ github.event.inputs.tag || github.ref_name }} ${{ matrix.platform.release_for }}
    if: "${{contains((github.event.inputs.tag || github.ref_name), 'notsd-v')}}"
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            target: x86_64-unknown-linux-gnu
            arch: amd64
          - release_for: Linux-aarch64
            target: aarch64-unknown-linux-gnu
            arch: arm64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ env.RELEASE_TAG_REF }}
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release --bin notsd"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get versions
        id: version
        run: |
          version=$(echo ${{ env.RELEASE_TAG_REF }} | sed 's/notsd-v//')
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/explodingcamera/notsd:${{ steps.version.outputs.version }}-${{ matrix.platform.arch }}
          platforms: linux/${{ matrix.platform.arch }}
          file: crate/notsd/Dockerfile
          context: target/${{ matrix.platform.target }}/release
          build-args: |
            NOTS_VERSION=v${{ steps.version.outputs.version }}

  build-cli:
    name: Release ${{ github.event.inputs.tag || github.ref_name }} ${{ matrix.platform.release_for }}
    if: "${{contains((github.event.inputs.tag || github.ref_name), 'nots-cli-v')}}"
    strategy:
      matrix:
        platform:
          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: nots-cli.exe
            name: nots-cli-x86_64-pc-windows.zip
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: nots-cli
            name: nots-cli-x86_64-apple-darwin.tar.xz
          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: nots-cli
            name: nots-cli-aarch64-apple-darwin.tar.xz
          - release_for: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin: nots-cli
            name: nots-cli-x86_64-unknown-linux.tar.xz
          - release_for: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            bin: nots-cli
            name: nots-cli-aarch64-unknown-linux-musl.tar.xz

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ env.RELEASE_TAG_REF }}

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release --bin nots-cli"

      - name: .tar.xz if not Windows
        if: ${{ matrix.platform.release_for != 'Windows-x86_64' }}
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar -cJf ${{ matrix.platform.name }} nots-cli

      - name: .zip if Windows
        if: ${{ matrix.platform.release_for == 'Windows-x86_64' }}
        shell: powershell
        run: |
          cd target/${{ matrix.platform.target }}/release
          Compress-Archive -Path nots-cli.exe -DestinationPath ${{ matrix.platform.name }}

      - name: Upload binary to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG_REF }}
          files: target/${{ matrix.platform.target }}/release/${{ matrix.platform.name }}
